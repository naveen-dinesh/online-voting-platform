// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Voter trend analysis AI agent.
 * 
 * - analyzeVoterTrends - A function that handles the voter trend analysis process.
 * - AnalyzeVoterTrendsInput - The input type for the analyzeVoterTrends function.
 * - AnalyzeVoterTrendsOutput - The return type for the analyzeVoterTrends function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeVoterTrendsInputSchema = z.object({
  anonymizedVoterData: z.string().describe('Anonymized and aggregated voter data in JSON format.'),
});
export type AnalyzeVoterTrendsInput = z.infer<typeof AnalyzeVoterTrendsInputSchema>;

const AnalyzeVoterTrendsOutputSchema = z.object({
  summary: z.string().describe('A summary of the voter trends and potential biases identified in the data.'),
  keyInsights: z.array(z.string()).describe('Key insights into voter behavior and potential areas of concern.'),
  recommendations: z.string().describe('Recommendations for improving fairness and inclusivity in future elections based on the analysis.'),
});
export type AnalyzeVoterTrendsOutput = z.infer<typeof AnalyzeVoterTrendsOutputSchema>;

export async function analyzeVoterTrends(input: AnalyzeVoterTrendsInput): Promise<AnalyzeVoterTrendsOutput> {
  return analyzeVoterTrendsFlow(input);
}

const preventUnverifiedVoteCounting = ai.defineTool({
    name: 'preventUnverifiedVoteCounting',
    description: 'Ensures that only verified voters are included in the analysis to avoid skewing the results.',
    inputSchema: z.object({
      voterData: z.string().describe('The raw voter data to be analyzed.'),
    }),
    outputSchema: z.string().describe('The voter data filtered to include only verified voters.'),
  },
  async (input) => {
    //In a real implementation, this tool would filter the voter data
    //based on verification status.  This is a placeholder implementation.
    console.log(`Tool preventUnverifiedVoteCounting called with ${input.voterData}`)
    return input.voterData;
  }
);

const prompt = ai.definePrompt({
  name: 'analyzeVoterTrendsPrompt',
  input: {schema: AnalyzeVoterTrendsInputSchema},
  output: {schema: AnalyzeVoterTrendsOutputSchema},
  tools: [preventUnverifiedVoteCounting],
  prompt: `You are an expert in analyzing voter data to identify trends and potential biases.

  Analyze the following anonymized voter data, which has been pre-processed by the preventUnverifiedVoteCounting tool to remove unverified voters:
  {{$tool_result = await preventUnverifiedVoteCounting anonymizedVoterData=anonymizedVoterData}}
  Voter Data: {{ anonymizedVoterData }}

  Identify key trends, potential biases, and provide recommendations for improving fairness and inclusivity in future elections.
  Be sure to summarize your findings and provide key insights as bullet points.
  Ensure recommendations are actionable and specific.
  `,
});

const analyzeVoterTrendsFlow = ai.defineFlow(
  {
    name: 'analyzeVoterTrendsFlow',
    inputSchema: AnalyzeVoterTrendsInputSchema,
    outputSchema: AnalyzeVoterTrendsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
